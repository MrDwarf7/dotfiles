Whick-key (Setting up/moving to a WK register file.


>>>

You shouldn’t put vim.g.nord_italic in opts. Put it in the config function like this instead:

config = function()
vim.g.nord_italic = false
vim.cmd([[colorscheme nord]])
end,
opts = {}
The opts parameter is just shortcut to avoid the normal boilerplate config = function() require(‘plugin’).setup(opts) end.

<<<


https://github.com/m4xshen/dotfiles

https://github.com/folke?tab=repositories



Tooling for database interactions (IE: MongoDB etc.)



Auto completion (
	friendly-snippets
)


Mini indent scope (Mostly working but need to tweak it)



Debugging /// Terminal things 



nvim-spectre
search/replace in multiple files



lewis6991/gitsigns.nvim
gitsigns.nvim
{ Tweaks and changes to be made }


vim-illuminate
Automatically highlights other instances of the word under your cursor. This works with LSP, Treesitter, and regexp matching to find the other instances.


mini.bufremove { This has AstroNvim/astrotheme as a dependency? tf? }

trouble.nvim
better diagnostics list and others

todo-comments.nvim
Finds and lists all of the TODO, HACK, BUG, etc comment in your project and loads them into a browsable list.

neoconf.nvim { Dep of nvim-lsp, not installed directly. }
neoconf.nvim is a Neovim plugin to manage global and project-local settings.





{
      "themaxmarchuk/tailwindcss-colors.nvim",
      config = function()
         require("tailwindcss-colors").setup()
      end,
   },


{
      "laytan/tailwind-sorter.nvim",
      dependencies = {
         "nvim-treesitter/nvim-treesitter",
         "nvim-lua/plenary.nvim",
      },
      build = "cd formatter && npm i && npm run build",
      config = {},
   },

{
      "github/copilot.vim",
      config = function()
         vim.cmd('imap <silent><script><expr> <C-CR> copilot#Accept("\\<CR>")')
         vim.g.copilot_no_tab_map = true
         vim.g.copilot_enabled = false
      end,
   },

{
      "github/copilot.vim",
      config = function()
         vim.cmd('imap <silent><script><expr> <C-CR> copilot#Accept("\\<CR>")')
         vim.g.copilot_no_tab_map = true
         vim.g.copilot_enabled = false
      end,
   },

}
