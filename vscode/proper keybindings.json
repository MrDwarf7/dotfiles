[
	{
		"key": "shift+f10",
		"command": "-editor.action.showContextMenu",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+n",
		"command": "-code-runner.run"
	},
	{
		"key": "shift+f9",
		"command": "-settings.action.showContextMenu",
		"when": "inSettingsEditor"
	},
	{
		"key": "shift+pausebreak",
		"command": "editor.debug.action.toggleInlineBreakpoint",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+f9",
		"command": "-editor.debug.action.toggleInlineBreakpoint",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+f9",
		"command": "code-runner.stop"
	},
	{
		"key": "ctrl+alt+m",
		"command": "-code-runner.stop"
	},
	{
		"key": "shift shift",
		"command": "workbench.action.showCommands"
	},
	{
		"key": "shift+f10",
		"command": "code-runner.run"
	},
	{
		"key": "shift+enter",
		"command": "-python.execSelectionInTerminal",
		"when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
	},
	{
		"key": "ctrl+shift+alt+pageup",
		"command": "git.stageAll"
	},
	{
		"key": "ctrl+shift+alt+insert",
		"command": "git.commitMessageAccept"
	},
	{
		"key": "ctrl+shift+alt+home",
		"command": "git.commitAll"
	},
	{
		"key": "ctrl+alt+win+n",
		"command": "-welcome.showNewFileEntries"
	},
	{
		"key": "ctrl+alt+n",
		"command": "welcome.showNewFileEntries"
	},
	{
		"key": "ctrl+n",
		"command": "-workbench.action.files.newUntitledFile"
	},
	{
		"key": "ctrl+shift+c left",
		"command": "workbench.files.action.collapseExplorerFolders"
	},
	{
		"key": "ctrl+shift+alt+end",
		"command": "git.push"
	},
	{
		"key": "ctrl+shift+alt+pageup",
		"command": "-cursorColumnSelectPageUp",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+pagedown",
		"command": "-cursorColumnSelectPageDown",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+pagedown",
		"command": "git.fetch"
	},
	{
		"key": "ctrl+alt+p i",
		"command": "livePreview.start.internalPreview.atFile"
	},
	{
		"key": "ctrl+alt+p p",
		"command": "extension.liveServer.goOnline",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+l alt+o",
		"command": "-extension.liveServer.goOnline",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+g g",
		"command": "-workbench.view.scm",
		"when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "ctrl+shift+g g",
		"command": "gitlens.graph.openSCM"
	},
	{
		"key": "ctrl+shift+.",
		"command": "-breadcrumbs.focusAndSelect",
		"when": "breadcrumbsPossible && breadcrumbsVisible"
	},
	{
		"key": "ctrl+shift+.",
		"command": "-editor.action.inPlaceReplace.down",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+.",
		"command": "-breadcrumbs.toggleToOn",
		"when": "!config.breadcrumbs.enabled"
	},
	{
		"key": "ctrl+shift+.",
		"command": "workbench.view.scm",
		"when": "workbench.scm.active"
	},
	{
		"key": "ctrl+shift+g",
		"command": "-workbench.view.scm",
		"when": "workbench.scm.active"
	},
	{
		"key": "ctrl+shift+;",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{
		"key": "ctrl+`",
		"command": "-workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{
		"key": "ctrl+shift+-",
		"command": "workbench.action.terminal.kill"
	},
	{
		"key": "ctrl+shift+=",
		"command": "workbench.action.terminal.new",
		"when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
	},
	{
		"key": "ctrl+shift+`",
		"command": "-workbench.action.terminal.new",
		"when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
	},
	{
		"key": "alt+down",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.terminal.focusNext",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "ctrl+pagedown",
		"command": "workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+down",
		"command": "-workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+up",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.terminal.focusPrevious",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "ctrl+pageup",
		"command": "workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+up",
		"command": "-workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+insert",
		"command": "workbench.action.terminal.split",
		"when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
	},
	{
		"key": "ctrl+shift+5",
		"command": "-workbench.action.terminal.split",
		"when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
	},
	{
		"key": "ctrl+shift+insert",
		"command": "workbench.action.terminal.splitInstance",
		"when": "terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "ctrl+shift+5",
		"command": "-workbench.action.terminal.splitInstance",
		"when": "terminalProcessSupported && terminalTabsFocus"
	},

	{
		"key": "ctrl+contextmenu",
		"command": "editor.action.sourceAction"
	},
	{
		"key": "ctrl+alt+pausebreak",
		"command": "github.copilot.generate",
		"when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
	},
	{
		"key": "ctrl+enter",
		"command": "-github.copilot.generate",
		"when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
	},

	{
		"key": "ctrl+shift+f10",
		"command": "workbench.action.terminal.runActiveFile"
	},
	{
		"key": "ctrl+tab",
		"command": "workbench.action.nextEditorInGroup"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "workbench.action.previousEditorInGroup"
	},
	{
		"key": "ctrl+alt+\\",
		"command": "editor.emmet.action.wrapWithAbbreviation"
	},
	{
		"key": "ctrl+shift+\\",
		"command": "-workbench.action.terminal.focusTabs",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "ctrl+shift+\\",
		"command": "terminal.focus"
	},
	{
		"command": "whichkey.show",
		"key": "space",
		"when": "editorTextFocus && neovim.mode != insert && editorTextFocus"
	},

	{
		"command": "vscode-neovim.send",
		"key": "delete",
		"when": "editorTextFocus && neovim.mode != insert",
		"args": ":nohl<CR>"
	},

	{
		"command": "vscode-neovim.send",
		"key": "ctrl+w+h",
		"when": "neovim.mode != insert",
		"args": "<C-w>h"
	},

	{
		"command": "vscode-neovim.send",
		"key": "ctrl+d",
		"when": "neovim.mode != insert",
		"args": "<C-d>"
	},

	{
		"command": "vscode-neovim.send",
		"key": "ctrl+q",
		"when": "neovim.mode == normal",
		"args": "<C-q>"
	},

	{
		"command": "-vscode-neovim.send",
		"key": "ctrl+v"
	},

	{
		"command": "vscode-neovim.send",
		"key": "ctrl+u",
		"when": "neovim.mode != insert",
		"args": "<C-u>"
	},

	{
		"command": "vscode-neovim.send",
		"key": "ctrl+w+l",
		"when": "neovim.mode != insert",
		"args": "<C-w>l"
	},

	{
		"command": "vscode-neovim.send",
		"key": "ctrl+w+j",
		"when": "neovim.mode != insert",
		"args": "<C-w>j"
	},

	{
		"command": "vscode-neovim.send",
		"key": "ctrl+w+k",
		"when": "neovim.mode != insert",
		"args": "<C-w>k"
	},

	{
		"command": "vscode-neovim.send",
		"key": "p",
		"when": "editorTextFocus && neovim.mode != insert && neovim.mode == visual",
		"args": "pgvy"
	},

	{
		"command": "vscode-neovim.send",
		"key": "ctrl+l",
		"when": "editorTextFocus && neovim.mode == insert",
		"args": "<C-l>"
	},

	{
		"command": "vscode-neovim.send",
		"key": "shift+h",
		"when": "editorTextFocus && neovim.mode == normal",
		"args": "<S-h>"
	},

	{
		"command": "vscode-neovim.send",
		"key": "shift+l",
		"when": "editorTextFocus && neovim.mode == normal",
		"args": "<S-l>"
	},

	{
		"command": "vscode-neovim.send",
		"key": "shift+h",
		"when": "editorTextFocus && neovim.mode != insert",
		"args": "^"
	},

	{
		"command": "vscode-neovim.send",
		"key": "shift+l",
		"when": "editorTextFocus && neovim.mode != insert",
		"args": "$"
	},

	{
		"command": "vscode-neovim.compositeEscape1",
		"key": "j",
		"when": "neovim.mode == insert && editorTextFocus",
		"args": "j"
	},

	{
		"command": "vscode-neovim.send",
		"key": "ctrl+k",
		"when": "neovim.mode == insert && editorTextFocus && widgetNavigationVisible",
		"args": "<C-n>"
	},

	{
		"command": "vscode-neovim.send",
		"key": "ctrl+j",
		"when": "neovim.mode == insert && editorTextFocus && widgetNavigationVisible",
		"args": "<C-p>"
	},

	{
		"key": "ctrl+shift+'",
		"command": "workbench.action.togglePanel"
	},

	{
		"command": "-workbench.action.togglePanel",
		"key": "ctrl+k"
	},

	{
		"command": "-workbench.action.togglePanel",
		"key": "ctrl+j"
	},

	{
		"command": "vscode-neovim.send",
		"key": "ctrl+j",
		"when": "neovim.mode != insert && widgetNavigationVisible",
		"args": "<C-n>"
	},

	{
		"command": "vscode-neovim.send",
		"key": "ctrl+v",
		"when": "neovim.mode != insert && filesExplorerFocus",
		"args": "explorer.openToSide"
	},

	{
		"command": "vscode-neovim.send",
		"key": "ctrl+k",
		"when": "neovim.mode != insert && widgetNavigationVisible",
		"args": "<C-p>"
	},

	{
		"command": "-breadcrumbs.focus",
		"key": "ctrl+shift+;",
		"when": "breadcrumbsPossible && breadcrumbsVisible"
	},

	{
		"command": "workbench.action.closeActiveEditor",
		"key": "ctrl+w q",
		"when": "editorTextFocus && filesExplorerFocus && searchViewletFocus && !terminalFocus"
	},

	{
		"command": "vscode-neovim.send",
		"key": "ctrl+q",
		"when": "editorTextFocus && neovim.mode == insert ",
		"args": "<C-q>"
	},
	{
		"key": "ctrl+k",
		"command": "list.focusUp",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "up",
		"command": "-list.focusUp",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "up",
		"command": "-selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "up",
		"command": "-selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+j",
		"command": "list.focusDown",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "down",
		"command": "-list.focusDown",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "down",
		"command": "-selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "down",
		"command": "-selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+e",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "ctrl+p",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "ctrl+q",
		"command": "-workbench.action.quickOpenNavigateNextInViewPicker",
		"when": "inQuickOpen && inViewsPicker"
	},
	{
		"key": "ctrl+q",
		"command": "-workbench.action.quickOpenView"
	}
]
